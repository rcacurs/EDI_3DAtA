/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <vector>
#include<opencv2/core/core.hpp>
#include<opencv2/core/cuda.hpp>

/* Header for class lv_edi_EDI_3DAtA_opencvcudainterface_Compute */

#ifndef _Included_lv_edi_EDI_3DAtA_opencvcudainterface_Compute
#define _Included_lv_edi_EDI_3DAtA_opencvcudainterface_Compute
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     lv_edi_EDI_3DAtA_opencvcudainterface_Compute
 * Method:    gaussianBlur
 * Signature: ([DII)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_lv_edi_EDI_13DAtA_opencvcudainterface_Compute_gaussianBlur
  (JNIEnv *, jobject, jdoubleArray, jint, jint);

/*
 * Class:     lv_edi_EDI_3DAtA_opencvcudainterface_Compute
 * Method:    segmentBloodVessels
 * Signature: ([DII)[D
 */
JNIEXPORT jdoubleArray JNICALL Java_lv_edi_EDI_13DAtA_opencvcudainterface_Compute_segmentBloodVessels
(JNIEnv * env, jobject obj, jdoubleArray input, jint rows, jint cols, jdoubleArray codes, jdoubleArray means, jint patchSize, jint numberOfFilters);




}
// functions not wrapped for java

std::vector<cv::cuda::GpuMat> gausianPyramid(cv::cuda::GpuMat input, int numLayers);

#ifdef __cplusplus
#endif
#endif
